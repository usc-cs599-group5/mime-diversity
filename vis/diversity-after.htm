<!DOCTYPE html>
<html>
  <head>    
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
    <title>MIME diversity (before)</title>

<!-- based on https://gist.github.com/enjalot/1203641 -->

    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?2.1.3"></script>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.geom.js?2.1.3"></script>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.layout.js?2.1.3"></script>

    <style type="text/css">
        .slice text {
            font-size: 8pt;
            font-family: Arial;
        }   
    </style>
  </head>
  <body>
    <script type="text/javascript">

    var w = 1000,                        //width
    h = 1000,                            //height
    r = 500,                            //radius
    color = d3.scale.category20c();     //builtin range of colors

    var rawData = {"image/x-bpg":7,"message/rfc822":205,"application/vnd.ms-htmlhelp":1,"application/atom+xml":2659,"image/x-xcf":1,"image/x-ms-bmp":54,"application/vnd.openxmlformats-officedocument.wordprocessingml.template":1,"application/x-shockwave-flash":121,"video/x-msvideo":80,"application/vnd.apple.keynote":1,"audio/x-flac":2,"application/dif+xml":2907,"application/vnd.ms-excel":523,"text/x-jsp":3,"application/vnd.ms-excel.sheet.4":1,"audio/mp4":18,"application/pdf":37810,"application/x-bittorrent":3,"application/x-tika-ooxml":789,"application/rss+xml":7555,"application/x-netcdf":19,"text/x-perl":14,"application/epub+zip":29,"text/html":676956,"application/vnd.openxmlformats-officedocument.presentationml.presentation":12,"application/x-hdf":26,"text/x-diff":1,"application/x-rpm":3,"image/vnd.microsoft.icon":1345,"video/quicktime":880,"text/troff":2,"video/mp4":618,"application/xml":5637,"application/zlib":22,"application/x-sh":1066,"audio/x-ms-wma":55,"text/x-php":24,"application/xhtml+xml":277210,"application/postscript":211,"application/x-tika-msoffice":1568,"application/x-msdownload; format=pe32":15,"video/x-m4v":168,"application/javascript":299,"application/x-tika-ooxml-protected":1,"application/vnd.ms-excel.sheet.macroenabled.12":1,"application/vnd.sun.xml.writer":1,"audio/basic":54,"application/x-compress":40,"image/vnd.dwg":3,"application/vnd.ms-powerpoint":48,"application/x-tex":11,"application/x-sqlite3":1,"video/mpeg":231,"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":140,"image/tiff":448,"application/x-stuffit":1,"application/zip":1472,"application/x-bibtex-text-file":131,"application/xslt+xml":11,"application/x-gtar":45,"application/vnd.openxmlformats-officedocument":17,"application/fits":46,"image/vnd.adobe.photoshop":4,"application/x-msdownload; format=pe":1,"image/gif":33709,"application/x-mspublisher":2,"application/java-vm":1,"application/x-rar-compressed":1,"application/vnd.openxmlformats-officedocument.wordprocessingml.document":413,"application/x-activemime":1,"text/x-csrc":3,"application/vnd.google-earth.kmz":105,"application/vnd.rn-realmedia":103,"audio/x-wav":58,"audio/x-aiff":9,"application/octet-stream":95755,"application/msword":686,"video/x-ms-asf":25,"application/rdf+xml":927,"application/vnd.google-earth.kml+xml":249,"application/x-msmetafile":5,"audio/mpeg":591,"video/x-ms-wmv":122,"application/rtf":44,"application/x-lha":2,"application/vnd.oasis.opendocument.text":5,"application/x-matroska":65,"application/x-7z-compressed":2,"application/x-xz":11,"application/x-msdownload":72,"audio/x-mpegurl":1,"image/jpeg":79538,"audio/vorbis":3,"image/svg+xml":283,"video/x-flv":12,"application/x-java-jnilib":1,"application/x-debian-package":4,"text/x-matlab":1091,"application/x-grib":3,"application/gzip":1596,"application/x-executable":32,"text/plain":89715,"application/dita+xml; format=concept":319,"message/x-emlx":1,"image/png":33721,"application/x-bzip2":63,"application/x-elc":262,"text/x-vcard":13,"application/x-tar":32,"application/vnd.openxmlformats-officedocument.presentationml.slideshow":1,"text/x-python":5,"application/x-font-ttf":9}

    data = Object.keys(rawData).map(function(k) {
        return {label: k, value: rawData[k]};
    });
    
    var vis = d3.select("body")
        .append("svg:svg")              //create the SVG element inside the <body>
        .data([data])                   //associate our data with the document
            .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
            .attr("height", h)
        .append("svg:g")                //make a group to hold our pie chart
            .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius

    var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
        .outerRadius(r);

    var pie = d3.layout.pie()           //this will create arc data for us given a list of values
        .value(function(d) { return d.value; });    //we must tell it out to access the value of each element in our data array

    var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
        .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
        .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
            .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                .attr("class", "slice");    //allow us to style things in the slices (like text)

        arcs.append("svg:path")
                .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
                .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function

        arcs.append("svg:text")                                     //add a label to each slice
                .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                //we have to make sure to set these before calling arc.centroid
                d.innerRadius = 0;
                d.outerRadius = r;
                return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
            })
            .attr("text-anchor", "middle")                          //center the text on it's origin
            .text(function(d, i) { return data[i].label; });        //get the label from our original data array
        
    </script>
  </body>
</html>

