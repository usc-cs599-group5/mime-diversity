<!doctype html>
<html>
  <head>
    <title>FHT</title>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    		<style>
			/* tell the SVG path to be a thin blue line without any area fill */
			path {
				stroke: steelblue;
				stroke-width: 2;
				fill: none;
			}
			
			.axis {
			  shape-rendering: crispEdges;
			}

			.x.axis line {
			  stroke: lightgrey;
			}

			.x.axis .minor {
			  stroke-opacity: .5;
			}

			.x.axis path {
			  display: none;
			}
			.x.axis path1 {
			  display: none;
			}
			.y.axis line, .y.axis path,.y.axis path1 {
			  fill: none;
			  stroke: #000;
			}
		</style>  
    <script src="d3/d3.min.js" charset="utf-8"></script>
    <script type="text/javascript">
        
var data

function load() {
  d3.json("vis-json/fht.json", function(error, json) {
    data = json
    loadDone()
  })
}
        
        
function loadDone() {

  d3.select("#choose")
    .selectAll("option")
      .data(Object.keys(data).sort())
    .enter().append("option")
      .text(function(d) { return d })
  select()
  var  m = [40, 40, 40, 200]; // margins
		 var w = 1000 - m[1] - m[3]; // width
		 var h = 320 - m[0] - m[2]; 


x = d3.scale.linear().domain([0,255]).range([0, w]);
y = d3.scale.linear().domain([15,0]).range([h, 0]);

var graph = d3.select("#xa").append("svg:svg")
			      .attr("width", w + m[1] + m[3])
			      .attr("height", h + m[0] + m[2])
			      .append("svg:g")
			      .attr("transform", "translate(" + m[3] + "," + m[0] + ")");
                  


var xAxis = d3.svg.axis().scale(x).tickSize(-h).tickSubdivide(true);
			// Add the x-axis.
			graph.append("svg:g")
			      .attr("class", "x axis")
			      .attr("transform", "translate(0," + h + ")")
			      .call(xAxis)

var yAxisLeft = d3.svg.axis().scale(y).ticks(4).orient("left");
			// Add the y-axis to the left
			graph.append("svg:g")
			      .attr("class", "y axis")
			      .attr("transform", "translate(-25,0)")
			      .call(yAxisLeft)
}

function select() {
  
  var w = 3, h = 15
  var chart = d3.select("#chart")
      .selectAll("div")
      .data([].concat.apply([], data[document.getElementById("choose").value]))
  chart.enter().append("div")
      .style("position", "absolute")
      .style("width", w + "px")
      .style("height", h + "px")
      .style("left", function(d, i) { return (i % 256) * w + "px" })
      .style("top", function(d, i) { return Math.floor(i / 256) * h + "px" })
  chart.style("background-color", function(d) {
        var b = Math.round((1 - d) * 255)
        return "rgb(" + b + "," + b + "," + b + ")"
      })
      .attr("title", function(d, i) {
        return "byte position: " + Math.floor(i / 256) + "\nbyte value: " + (i % 256) + "\ncorrelation strength: " + d.toFixed(2)
      })
      /*.attr("onMouseMove", function(d, i) {
        return function() {
          document.title = "byte position: " + Math.floor(i / 256) + ", byte value: " + (i % 256) + ", correlation strength: " + d.toFixed(2)
        }
      })*/
}
</script>
  </head>
  <body onload="load()" style="background-color: #eee">
        <div style="margin-top : 40px;">

      <select id="choose" onchange="select()"></select>
     
    </div>
      <div id ="xa" style ="position : relative;margin-top: 0 px;left: 0 px">
      <div style="position : absolute ;left : 200px; top : 40px"><div id="chart"></div>
      <br>
      </div>
      </div>
    <div style="position: absolute; left: 200px; top: 370px; width: 768px; text-align: center">Byte Value</div>
    <div style="position: absolute; top: 220px; width: 200px; text-align: center; transform: rotate(-90deg)">Byte Position</div>

  </body>
</html>
